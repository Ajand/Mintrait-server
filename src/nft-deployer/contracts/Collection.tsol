pragma ton-solidity >= 0.61.2;
pragma AbiHeader expire;
pragma AbiHeader time;
pragma AbiHeader pubkey;

import 'tip4/contracts/CollectionBase.tsol';
import './Nft.tsol';

contract Collection is CollectionBase  {

    constructor(
        TvmCell codeNft, 
        TvmCell codeIndex,
        TvmCell codeIndexBasis,
        string json
    ) CollectionBase(codeNft, codeIndex, codeIndexBasis, json)  public {
        tvm.accept();
    }

    function mintNft(string json, address owner) external internalMsg  virtual {
        require(msg.value > _remainOnNft + (2 * _indexDeployValue), value_is_less_than_required);
        /// reserve original_balance
        tvm.rawReserve(0, 4);

        uint256 id = _totalSupply;
        _totalSupply++;

        TvmCell codeNft = _buildNftCode(address(this));
        TvmCell stateNft = _buildNftState(codeNft, id);
        address nftAddr = new NftBase{
            stateInit: stateNft,
            value: 0,
            flag: 128
        }(
            owner,
            msg.sender,
            _remainOnNft,
            json,
            _indexDeployValue,
            _indexDestroyValue,
            _codeIndex
        );

        emit NftCreated(
            id, 
            nftAddr,
            msg.sender,
            msg.sender, 
            msg.sender
        );
    }
}